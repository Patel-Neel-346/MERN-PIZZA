name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test the Project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeORM Migrations
        run: npm run migration:run
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Test and Coverage
        run: |
          export NODE_OPTIONS="--dns-result-order=ipv4first"
          npm run test
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          JWKS_URI: ${{ secrets.JWKS_URI }}

      - name: Build TypeScript
        run: npm run build

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push-docker:
    name: Build and Push Docker Image
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    env:
      IMAGE_NAME: neelpatel733/mern_auth_service
      IMAGE_TAG: build-${{ github.run_number }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} -f docker/prod/Dockerfile .

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
